{"version":3,"sources":["../../src/pages/notes-modal/notes-modal.module.ts","../../src/pages/notes-modal/notes-modal.ts","../../src/pages/notes-modal/notes.service.ts"],"names":[],"mappings":"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","file":"39.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { NotesModalPage } from './notes-modal';\nimport { HttpModule } from \"@angular/http\"\n\n@NgModule({\n  declarations: [\n\tNotesModalPage,\n  ],\n  imports: [\n\tIonicPageModule.forChild(NotesModalPage),\n\tHttpModule\n  ],\n  exports: [\n    NotesModalPage\n  ]\n})\nexport class NotesModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notes-modal/notes-modal.module.ts","import { Component } from '@angular/core';\nimport {\n\tIonicPage,\n\tNavController,\n\tNavParams,\n\tAlertController,\n\tViewController,\n\tApp,\n} from 'ionic-angular';\nimport { AppService } from '@app/app.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NotesService } from './notes.service';\n//import { cl } from \"@app/globals\";\n\n@IonicPage()\n@Component({\n\tselector: 'notes-modal',\n\ttemplateUrl: 'notes-modal.html',\n\tproviders: [AppService, NotesService],\n})\nexport class NotesModalPage {\n\tpublic notesForm: any;\n\tpublic noteType: string;\n\tpublic profile: any;\n\tpublic note: string = null;\n\tpublic noteId: number = 0;\n\tconstructor(\n\t\tpublic navCtrl: NavController,\n\t\tpublic navParams: NavParams,\n\t\tpublic viewCtrl: ViewController,\n\t\tprivate appService: AppService,\n\t\tprivate fb: FormBuilder,\n\t\tpublic alertCtrl: AlertController,\n\t\tprivate service: NotesService,\n\t\tprivate app: App,\n\t) {\n\t\tthis.note = this.navParams.get('note');\n\t\tthis.noteId = this.navParams.get('id');\n\t\tthis.appService.getRegistrationData().then((data) => {\n\t\t\tthis.profile = JSON.parse(data);\n\t\t});\n\t\tthis.notesForm = this.fb.group({\n\t\t\tnote: [this.note, Validators.compose([Validators.required])],\n\t\t});\n\t\tthis.noteType = this.navParams.get('noteType');\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - ionViewWillLoad\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tionViewWillLoad(): void {\n\t\tthis.viewCtrl.showBackButton(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - saveNote\n\t** DESC - This will save the note\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsaveNote() {\n\t\tif (!this.notesForm.valid) {\n\t\t\tthis.presentAlert('Note can not be blank');\n\t\t\treturn;\n\t\t}\n\t\tif (this.noteId) {\n\t\t\tthis.service\n\t\t\t\t.saveNote(\n\t\t\t\t\tthis.profile.reg_id,\n\t\t\t\t\tthis.notesForm.get('note').value,\n\t\t\t\t\tthis.noteId,\n\t\t\t\t)\n\t\t\t\t.subscribe(() => {\n\t\t\t\t\tthis.viewCtrl.dismiss([]);\n\t\t\t\t\tlet nav = this.app.getRootNav();\n\t\t\t\t\tnav.push('MyNotesPage');\n\t\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\t\tthis.service\n\t\t\t.addNote(\n\t\t\t\tthis.profile.reg_id,\n\t\t\t\tthis.notesForm.get('note').value,\n\t\t\t\tthis.noteType,\n\t\t\t)\n\t\t\t.subscribe(() => {\n\t\t\t\tthis.viewCtrl.dismiss([]);\n\t\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - close\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tclose() {\n\t\tthis.viewCtrl.dismiss([]);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - \n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tpresentAlert(title): void {\n\t\tlet alert = this.alertCtrl.create({\n\t\t\ttitle: title,\n\t\t\tbuttons: ['OK'],\n\t\t});\n\t\talert.present();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notes-modal/notes-modal.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { eventUrl, serverToken, eventId, database } from '@app/globals';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class NotesService {\n\tprivate url: string = `${eventUrl}.notes`;\n\tprivate headers: Headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\t'er-id': serverToken,\n\t\tdsn: database,\n\t});\n\tprivate options: RequestOptions = new RequestOptions({\n\t\theaders: this.headers,\n\t});\n\n\tconstructor(private http: Http) {}\n\n\tgetScheduleDetail(scheduleId: number): Observable<any> {\n\t\treturn this.http\n\t\t\t.get(`${this.url}&scheduleId=${scheduleId}`, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - saveNote\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsaveNote(regId, note: string, noteId: number) {\n\t\tlet url = `${eventUrl}.save-note&eventId=${eventId}&note=${note}&noteId=${noteId}&item=${btoa(\n\t\t\tregId,\n\t\t)}`;\n\t\treturn this.http\n\t\t\t.get(url, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - addtoSchedule\n\t**-------------------------------------------------------------------------------------\n\t*/\n\taddNote(regId, note: string, noteType: string) {\n\t\tlet url = `${eventUrl}.add-notes&eventId=${eventId}&note=${note}&noteType=${noteType}&item=${btoa(\n\t\t\tregId,\n\t\t)}`;\n\t\treturn this.http\n\t\t\t.get(url, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - formatData\n\t** DESC - This will format the returned data\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tformatData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - throwError\n\t** DESC - this will catch all errors generically\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tthrowError(error: Response | any) {\n\t\treturn Observable.throw(error);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notes-modal/notes.service.ts"],"sourceRoot":""}