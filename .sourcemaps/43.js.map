{"version":3,"sources":["../../src/pages/auth/login/login.module.ts","../../src/pages/auth/auth.service.ts","../../src/pages/auth/login/login.ts"],"names":[],"mappings":"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","file":"43.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { LoginPage } from './login';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport {HttpModule} from '@angular/http';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tLoginPage\r\n\t],\r\n\timports: [\r\n\t\tIonicPageModule.forChild( LoginPage ),\r\n\t\tHttpModule\r\n\t],\r\n\texports: [\r\n\t\tLoginPage\r\n\t],\r\n\tproviders: [  ]\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/login/login.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport {\n\teventUrl,\n\tserverToken,\n\tclientId,\n\teventId,\n\tdatabase,\n} from '@app/globals';\nimport { AppService } from '@app/app.service';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthService {\n\tprivate url: string = `${eventUrl}.auth`;\n\tprivate headers: Headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\t'er-id': serverToken,\n\t\tdsn: database,\n\t});\n\tprivate options: RequestOptions = new RequestOptions({\n\t\theaders: this.headers,\n\t});\n\n\tconstructor(private http: Http, private appService: AppService) {}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - retrievePassword\n\t** DESC - This will retrive the users password \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tretrievePassword(regid: string, isSpeaker: boolean): Observable<any> {\n\t\tif (isSpeaker) {\n\t\t\treturn this.retrieveSpeakerPassword(regid);\n\t\t}\n\t\tlet body: string = JSON.stringify({\n\t\t\tregid: regid,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.forget-password`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - retrieveSpeakerPassword\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tretrieveSpeakerPassword(username: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.forget-speaker-password`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - startSession\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tstartSession(response): void {\n\t\tthis.appService.setAppToken(response.data.token);\n\t\tthis.appService.setRegistrationData(response.data.registration[0]);\n\t\tthis.appService.setIsSpeaker(false);\n\t\tthis.appService.setLoggedIn(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - startSpeakerSession\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tstartSpeakerSession(response): void {\n\t\tthis.appService.setAppToken(response.data.token);\n\t\tthis.appService.setSpeakerData(response.data.speaker[0]);\n\t\tthis.appService.setIsSpeaker(true);\n\t\tthis.appService.setLoggedIn(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - processLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tprocessLogin(username: string, password: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(this.url, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - processSpeakerLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tprocessSpeakerLogin(username: string, password: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.process-speaker-login`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - formatData\n\t** DESC - This will format the returned data\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tformatData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - throwError\n\t** DESC - this will catch all errors generically\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tthrowError(error: Response | any) {\n\t\treturn Observable.throw(error);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/auth.service.ts","import { Component, ViewChild } from '@angular/core';\nimport {\n\tIonicPage,\n\tMenuController,\n\tNavController,\n\tLoadingController,\n\tAlertController,\n\tContent,\n} from 'ionic-angular';\nimport { Events } from 'ionic-angular';\n\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { cl, hasSpeakerLogin, aboutConference } from '@app/globals';\nimport { AuthService } from '../auth.service';\nimport { AppService } from '@app/app.service';\n\n@IonicPage()\n@Component({\n\tselector: 'page-login',\n\ttemplateUrl: 'login.html',\n\tproviders: [AuthService, AppService],\n})\nexport class LoginPage {\n\tpublic loginForm: any;\n\tpublic loginSpeakerForm: any;\n\tpublic backgroundImage: any = '';\n\tpublic loaded: boolean = false;\n\tpublic showSpeakerLogin: boolean = false;\n\tpublic showAttendeeLogin: boolean = true;\n\tpublic hasSpeakerLogin: boolean = hasSpeakerLogin;\n\tpublic aboutConference: string = aboutConference;\n\t@ViewChild(Content)\n\tcontent: Content;\n\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - \n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tconstructor(\n\t\tpublic navCtrl: NavController,\n\t\tpublic fb: FormBuilder,\n\t\tpublic alertCtrl: AlertController,\n\t\tpublic loadingCtrl: LoadingController,\n\t\tpublic events: Events,\n\t\tpublic menuCtrl: MenuController,\n\t\tprivate authService: AuthService,\n\t\tprivate appService: AppService,\n\t) {\n\t\tthis.loginForm = fb.group({\n\t\t\temail: [null, Validators.compose([Validators.required])],\n\t\t\tpassword: [\n\t\t\t\tnull,\n\t\t\t\tValidators.compose([\n\t\t\t\t\tValidators.minLength(4),\n\t\t\t\t\tValidators.required,\n\t\t\t\t]),\n\t\t\t],\n\t\t});\n\n\t\tthis.loginSpeakerForm = fb.group({\n\t\t\temail: [null, Validators.compose([Validators.required])],\n\t\t\tpassword: [\n\t\t\t\tnull,\n\t\t\t\tValidators.compose([\n\t\t\t\t\tValidators.minLength(4),\n\t\t\t\t\tValidators.required,\n\t\t\t\t]),\n\t\t\t],\n\t\t});\n\n\t\tthis.menuCtrl.enable(false);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - ionViewWillEnter\n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tionViewWillEnter() {\n\t\tthis.appService.getLoggedIn().then((data) => {\n\t\t\tif (data) {\n\t\t\t\tthis.navCtrl.setRoot('DashboardPage');\n\t\t\t} else {\n\t\t\t\tthis.loaded = true;\n\t\t\t}\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - \n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tlogin(): void {\n\t\tif (!this.loginForm.valid) {\n\t\t\tthis.presentAlert('Reg ID & password can not be blank');\n\t\t\treturn;\n\t\t}\n\t\tlet loadingPopup = this.loadingCtrl.create({ spinner: 'crescent' });\n\t\tloadingPopup.present();\n\t\tthis.authService\n\t\t\t.processLogin(\n\t\t\t\tthis.loginForm.get('email').value,\n\t\t\t\tthis.loginForm.get('password').value,\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\t\tthis.presentAlert('Login failed, please try again');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.authService.startSession(response);\n\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\tthis.menuCtrl.enable(true);\n\t\t\t\t\tthis.events.publish('usertype:attendee', true);\n\t\t\t\t\tthis.navCtrl.setRoot('DashboardPage');\n\t\t\t\t},\n\t\t\t\t(err) => cl(err),\n\t\t\t);\n\t\treturn;\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - loginSpeaker\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tloginSpeaker() {\n\t\tif (!this.loginSpeakerForm.valid) {\n\t\t\tthis.presentAlert('Username & password can not be blank');\n\t\t\treturn;\n\t\t}\n\t\tlet loadingPopup = this.loadingCtrl.create({ spinner: 'crescent' });\n\t\tloadingPopup.present();\n\t\tthis.authService\n\t\t\t.processSpeakerLogin(\n\t\t\t\tthis.loginSpeakerForm.get('email').value,\n\t\t\t\tthis.loginSpeakerForm.get('password').value,\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tif (!response.success) {\n\t\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\t\tthis.presentAlert('Login failed, please try again');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.authService.startSpeakerSession(response);\n\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\tthis.menuCtrl.enable(true);\n\t\t\t\t\tthis.events.publish('usertype:speaker', true);\n\t\t\t\t\tthis.navCtrl.setRoot('DashboardPage');\n\t\t\t\t},\n\t\t\t\t(err) => cl(err),\n\t\t\t);\n\t\treturn;\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - forgot\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tforgot(): void {\n\t\tthis.navCtrl.push('ForgotPage', {\n\t\t\tshowSpeaker: false,\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - forgotSpeaker\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tforgotSpeaker() {\n\t\tthis.navCtrl.push('ForgotPage', {\n\t\t\tshowSpeaker: true,\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - createAccount\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tcreateAccount(): void {\n\t\tthis.navCtrl.push('RegisterPage');\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - presentAlert\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tpresentAlert(title): void {\n\t\tlet alert = this.alertCtrl.create({\n\t\t\ttitle: title,\n\t\t\tbuttons: ['OK'],\n\t\t});\n\t\talert.present();\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - scrollToBottom\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tscrollToBottom() {\n\t\tsetTimeout(() => {\n\t\t\tthis.content.scrollToBottom();\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - speakerLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tspeakerLogin() {\n\t\tlet loadingPopup = this.loadingCtrl.create({ spinner: 'crescent' });\n\t\tloadingPopup.present();\n\t\tsetTimeout(() => {\n\t\t\tloadingPopup.dismiss();\n\t\t}, 500);\n\t\tthis.showSpeakerLogin = true;\n\t\tthis.showAttendeeLogin = false;\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - AttendeeLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tAttendeeLogin() {\n\t\tlet loadingPopup = this.loadingCtrl.create({ spinner: 'crescent' });\n\t\tloadingPopup.present();\n\t\tsetTimeout(() => {\n\t\t\tloadingPopup.dismiss();\n\t\t}, 500);\n\t\tthis.showSpeakerLogin = false;\n\t\tthis.showAttendeeLogin = true;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/login/login.ts"],"sourceRoot":""}