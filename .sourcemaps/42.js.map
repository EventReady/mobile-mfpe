{"version":3,"sources":["../../src/pages/messaging/response-form/response-form.module.ts","../../src/pages/messaging/messages.service.ts","../../src/pages/messaging/response-form/response-form.ts"],"names":[],"mappings":"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","file":"42.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { ResponseFormPage } from '@pages/messaging/response-form/response-form';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n\tdeclarations: [ResponseFormPage],\n\timports: [IonicPageModule.forChild(ResponseFormPage), HttpModule],\n\texports: [ResponseFormPage],\n})\nexport class ResponseFormPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messaging/response-form/response-form.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport {\n\teventUrl,\n\tserverToken,\n\teventId,\n\tclientId,\n\tdatabase,\n} from '@app/globals';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class MessagesService {\n\tprivate headers: Headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\t'er-id': serverToken,\n\t\tdsn: database,\n\t});\n\tprivate options: RequestOptions = new RequestOptions({\n\t\theaders: this.headers,\n\t});\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - constructor\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tconstructor(private http: Http) {}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - getContacts\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tdeleteMessage(messageId) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.delete-message&messageid=${messageId}&clientId=${clientId}&eventId=${eventId}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - getContacts\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tgetContacts() {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.contacts&clientId=${clientId}&eventId=${eventId}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - getMessages\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tgetMessages(regid) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.get-messages&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - getMessage\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tgetMessage(regid, messageId) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.get-message&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}&messageId=${messageId}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - saveMessage\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsaveMessage(subject, message, regid, contactid) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.save-message&contact=${contactid}&subject=${subject}&message=${message}&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - saveResponse\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsaveResponse(message, regid, messageId) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.save-response&message=${message}&messageId=${messageId}&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - sendHelpMessage\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsendHelpMessage(message, regid) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.send-help-message&message=${message}&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - sendShareMessage\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsendShareMessage(email, message, regid) {\n\t\treturn this.http\n\t\t\t.get(\n\t\t\t\t`${eventUrl}.send-share-message&email=${email}&message=${message}&clientId=${clientId}&eventId=${eventId}&item=${btoa(\n\t\t\t\t\tregid,\n\t\t\t\t)}`,\n\t\t\t\tthis.options,\n\t\t\t)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - formatData\n\t** DESC - This will format the returned data\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tformatData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - throwError\n\t** DESC - this will catch all errors generically\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tthrowError(error: Response | any) {\n\t\treturn Observable.throw(error);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messaging/messages.service.ts","import { Component } from '@angular/core';\nimport {\n\tIonicPage,\n\tNavController,\n\tViewController,\n\tNavParams,\n\tLoadingController,\n\tToastController,\n\tAlertController,\n} from 'ionic-angular';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MessagesService } from '@pages/messaging/messages.service';\nimport { AppService } from '@app/app.service';\n\n@IonicPage()\n@Component({\n\tselector: 'response-form',\n\ttemplateUrl: 'response-form.html',\n\tproviders: [MessagesService, AppService],\n})\nexport class ResponseFormPage {\n\tmessageForm: FormGroup;\n\tmessages: any;\n\tbody: any;\n\tpublic profile: any;\n\tpublic hideHeader: boolean = false;\n\tpublic messageId: number;\n\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - constructor\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tconstructor(\n\t\tpublic navCtrl: NavController,\n\t\tpublic navParams: NavParams,\n\t\tpublic loadingCtrl: LoadingController,\n\t\tpublic viewCtrl: ViewController,\n\t\tpublic fb: FormBuilder,\n\t\tpublic toastCtrl: ToastController,\n\t\tpublic alertCtrl: AlertController,\n\t\tprivate service: MessagesService,\n\t\tprivate appService: AppService,\n\t) {\n\t\tif (this.navParams.data.hideHeader) {\n\t\t\tthis.hideHeader = this.navParams.data.hideHeader;\n\t\t}\n\t\tthis.messageId = this.navParams.get('messageId');\n\t\tif (!this.messageId) {\n\t\t\tthis.navCtrl.push('MessageRepliesPage');\n\t\t\treturn;\n\t\t}\n\t\tthis.appService.getRegistrationData().then((data) => {\n\t\t\tthis.profile = JSON.parse(data);\n\t\t});\n\n\t\tthis.messageForm = fb.group({\n\t\t\tbody: [\n\t\t\t\tnull,\n\t\t\t\tValidators.compose([\n\t\t\t\t\tValidators.required,\n\t\t\t\t\tValidators.maxLength(500),\n\t\t\t\t]),\n\t\t\t],\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - ionViewWillLoad\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tionViewWillLoad(): void {\n\t\tthis.viewCtrl.showBackButton(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - ionViewWillLoad\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tsubmitForm(value: any): void {\n\t\tthis.service\n\t\t\t.saveResponse(value.body, this.profile.reg_id, this.messageId)\n\t\t\t.subscribe((ret) => {\n\t\t\t\tthis.presentToast('bottom', 'Message Sent!', 3000);\n\t\t\t\ttry {\n\t\t\t\t\tthis.navCtrl.pop();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - presentToast\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tpresentToast(position: string, message: string, duration: number) {\n\t\tlet toast = this.toastCtrl.create({\n\t\t\tmessage: message,\n\t\t\tposition: position,\n\t\t\tduration: duration,\n\t\t});\n\t\ttoast.present();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messaging/response-form/response-form.ts"],"sourceRoot":""}