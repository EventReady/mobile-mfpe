{"version":3,"sources":["../../src/pages/auth/forgot/forgot.module.ts","../../src/pages/auth/auth.service.ts","../../src/pages/auth/forgot/forgot.ts"],"names":[],"mappings":"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","file":"44.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { ForgotPage } from './forgot';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { HttpModule } from \"@angular/http\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgotPage\r\n  ],\r\n  imports: [\r\n\tIonicPageModule.forChild(ForgotPage),\r\n\tHttpModule\r\n  ],\r\n  exports: [\r\n    ForgotPage\r\n  ]\r\n})\r\nexport class ForgotPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/forgot/forgot.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport {\n\teventUrl,\n\tserverToken,\n\tclientId,\n\teventId,\n\tdatabase,\n} from '@app/globals';\nimport { AppService } from '@app/app.service';\n\n// Import RxJs required methods\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthService {\n\tprivate url: string = `${eventUrl}.auth`;\n\tprivate headers: Headers = new Headers({\n\t\t'Content-Type': 'application/json',\n\t\t'er-id': serverToken,\n\t\tdsn: database,\n\t});\n\tprivate options: RequestOptions = new RequestOptions({\n\t\theaders: this.headers,\n\t});\n\n\tconstructor(private http: Http, private appService: AppService) {}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - retrievePassword\n\t** DESC - This will retrive the users password \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tretrievePassword(regid: string, isSpeaker: boolean): Observable<any> {\n\t\tif (isSpeaker) {\n\t\t\treturn this.retrieveSpeakerPassword(regid);\n\t\t}\n\t\tlet body: string = JSON.stringify({\n\t\t\tregid: regid,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.forget-password`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - retrieveSpeakerPassword\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tretrieveSpeakerPassword(username: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.forget-speaker-password`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - startSession\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tstartSession(response): void {\n\t\tthis.appService.setAppToken(response.data.token);\n\t\tthis.appService.setRegistrationData(response.data.registration[0]);\n\t\tthis.appService.setIsSpeaker(false);\n\t\tthis.appService.setLoggedIn(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - startSpeakerSession\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tstartSpeakerSession(response): void {\n\t\tthis.appService.setAppToken(response.data.token);\n\t\tthis.appService.setSpeakerData(response.data.speaker[0]);\n\t\tthis.appService.setIsSpeaker(true);\n\t\tthis.appService.setLoggedIn(true);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - processLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tprocessLogin(username: string, password: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(this.url, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - processSpeakerLogin\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tprocessSpeakerLogin(username: string, password: string): Observable<any> {\n\t\tlet body: string = JSON.stringify({\n\t\t\tusername: username,\n\t\t\tpassword: password,\n\t\t\tclientId: clientId,\n\t\t\teventId: eventId,\n\t\t});\n\t\treturn this.http\n\t\t\t.post(`${eventUrl}.process-speaker-login`, body, this.options)\n\t\t\t.map(this.formatData)\n\t\t\t.catch(this.throwError);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - formatData\n\t** DESC - This will format the returned data\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tformatData(res: Response) {\n\t\tlet body = res.json();\n\t\treturn body || {};\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - throwError\n\t** DESC - this will catch all errors generically\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tthrowError(error: Response | any) {\n\t\treturn Observable.throw(error);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/auth.service.ts","import {\n\tIonicPage,\n\tNavController,\n\tViewController,\n\tLoadingController,\n\tAlertController,\n\tNavParams,\n} from 'ionic-angular';\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { cl } from '@app/globals';\nimport { AuthService } from '../auth.service';\n\n@IonicPage()\n@Component({\n\tselector: 'page-forgot',\n\ttemplateUrl: 'forgot.html',\n\tproviders: [AuthService],\n})\nexport class ForgotPage {\n\tpublic resetPasswordForm;\n\tpublic resetSpeakerPasswordForm;\n\tpublic backgroundImage: any = '';\n\tpublic showSpeaker: boolean = false;\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - \n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tconstructor(\n\t\tpublic fb: FormBuilder,\n\t\tpublic nav: NavController,\n\t\tpublic loadingCtrl: LoadingController,\n\t\tpublic alertCtrl: AlertController,\n\t\tpublic viewCtrl: ViewController,\n\t\tprivate authService: AuthService,\n\t\tpublic navParams: NavParams,\n\t) {\n\t\tthis.showSpeaker = this.navParams.get('showSpeaker');\n\t\tthis.resetPasswordForm = fb.group({\n\t\t\tregid: ['', Validators.compose([Validators.required])],\n\t\t});\n\t\tthis.resetSpeakerPasswordForm = fb.group({\n\t\t\tusername: ['', Validators.compose([Validators.required])],\n\t\t});\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - \n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tionViewDidLoad() {\n\t\tthis.viewCtrl.showBackButton(false);\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - resetSpeakerPassword\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tresetSpeakerPassword() {\n\t\tif (!this.resetSpeakerPasswordForm.valid) {\n\t\t\tthis.presentAlert('Please provide a valid usernmae');\n\t\t\treturn;\n\t\t}\n\n\t\tlet loadingPopup = this.loadingCtrl.create({\n\t\t\tspinner: 'crescent',\n\t\t\tcontent: '',\n\t\t});\n\t\tloadingPopup.present();\n\t\tthis.authService\n\t\t\t.retrievePassword(\n\t\t\t\tthis.resetSpeakerPasswordForm.get('username').value,\n\t\t\t\tthis.showSpeaker,\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\tthis.presentAlert(\n\t\t\t\t\t\t'If your record is found, you will get an email with further instructions.',\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t(err) => cl(err),\n\t\t\t);\n\t\treturn;\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - resetpassword\n\t** DESC - \n\t**-------------------------------------------------------------------------------------\n\t*/\n\tresetPassword() {\n\t\tif (!this.resetPasswordForm.valid) {\n\t\t\tthis.presentAlert('Please provide a valid registration id');\n\t\t\treturn;\n\t\t}\n\n\t\tlet loadingPopup = this.loadingCtrl.create({\n\t\t\tspinner: 'crescent',\n\t\t\tcontent: '',\n\t\t});\n\t\tloadingPopup.present();\n\t\tthis.authService\n\t\t\t.retrievePassword(\n\t\t\t\tthis.resetPasswordForm.get('regid').value,\n\t\t\t\tthis.showSpeaker,\n\t\t\t)\n\t\t\t.subscribe(\n\t\t\t\t(response) => {\n\t\t\t\t\tloadingPopup.dismiss();\n\t\t\t\t\tthis.presentAlert(\n\t\t\t\t\t\t'If your record is found, you will get an email with further instructions.',\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t(err) => cl(err),\n\t\t\t);\n\t\treturn;\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - presentAlert\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tpresentAlert(title) {\n\t\tlet alert = this.alertCtrl.create({\n\t\t\ttitle: title,\n\t\t\tbuttons: ['OK'],\n\t\t});\n\t\talert.present();\n\t}\n\t/*\n\t**-------------------------------------------------------------------------------------\n\t** METHOD NAME - back\n\t**-------------------------------------------------------------------------------------\n\t*/\n\tback(): void {\n\t\tthis.nav.push('LoginPage');\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/forgot/forgot.ts"],"sourceRoot":""}